services:
  backend:
    build:
      context: ./app/backend        # ① auf den Ordner mit main.py
      dockerfile: Dockerfile
    container_name: food-diary-app
    working_dir: /app               # ② Start-Arbeitsverzeichnis
    ports:
      - "8000:8000"
    environment:
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-food_diary_db}
      - MYSQL_HOST=db
      - MYSQL_PORT=3306
    volumes:
      - ./app/backend:/app           # ③ mountet genau diesen Ordner
    command:
      - uvicorn
      - main:app
      - --host
      - "0.0.0.0"
      - --port
      - "8000"
      - --reload
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  db:
    build:
      context: .
      dockerfile: app/database/Dockerfile
    container_name: food-diary-db
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root_password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-food_diary_db}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local
